{"ast":null,"code":"import { FormArray, FormControl, FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../recipe.service\";\nimport * as i3 from \"@angular/forms\";\nfunction RecipeEditComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"div\", 16);\n    i0.ɵɵelement(2, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 18);\n    i0.ɵɵelement(4, \"input\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 18)(6, \"button\", 20);\n    i0.ɵɵtext(7, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nclass RecipeEditComponent {\n  constructor(route, recipeS) {\n    this.route = route;\n    this.recipeS = recipeS;\n    this.editMode = false;\n    this.oncancel = oncancel;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(para => {\n      this.id = +para['id'];\n      this.editMode = para['id'] != null;\n      /* to check if there is an id in the params, if not, that means we are in newMode. */\n      console.log('the current need to edit id is ' + this.id);\n      console.log('the current Mode is editMode ? ' + this.editMode);\n      this.initForm();\n    });\n  }\n  initForm() {\n    let recipeName = '';\n    let recipeImage = '';\n    let recipeDescription = '';\n    let recipeIngredients = new FormArray([]);\n    if (this.editMode) {\n      const recipe = this.recipeS.getRecipesById(this.id);\n      recipeName = recipe.name;\n      recipeImage = recipe.imagePath;\n      recipeDescription = recipe.description;\n      if (recipe['ingredients']) {\n        for (let ingredient of recipe.ingredients) {\n          recipeIngredients.push(new FormGroup({\n            'name': new FormControl(ingredient.name),\n            'amount': new FormControl(ingredient.amount)\n          }));\n        }\n      }\n    }\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName),\n      'image': new FormControl(recipeImage),\n      'description': new FormControl(recipeDescription)\n    });\n    console.log(this.recipeForm);\n  }\n  onSubmit() {}\n  onCancel() {\n    this.recipeForm.reset();\n    this.editMode = false;\n  }\n}\nRecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n  return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RecipeService));\n};\nRecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeEditComponent,\n  selectors: [[\"app-recipe-edit\"]],\n  decls: 34,\n  vars: 2,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"form-group\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"image\"], [\"id\", \"image\", \"type\", \"url\", \"formControlName\", \"image\", 1, \"form-control\"], [\"formControlName\", \"image\", 1, \"img-responsive\", 3, \"src\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"rows\", \"6\", \"formControlName\", \"description\", 1, \"form-control\"], [\"formArrayName\", \"ingredients\", 1, \"col-xs-12\"], [\"class\", \"row\", \"formGroupName\", \"\", 4, \"ngFor\"], [\"formGroupName\", \"\", 1, \"row\"], [1, \"col-xs-8\"], [\"type\", \"text\", 1, \"form-control\"], [1, \"col-xs-2\"], [\"type\", \"number\", 1, \"form-control\"], [1, \"btn-danger\", \",\", \"form-control\"]],\n  template: function RecipeEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RecipeEditComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"button\", 3);\n      i0.ɵɵtext(6, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function RecipeEditComponent_Template_button_click_7_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(8, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"div\", 1)(11, \"div\", 5)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"div\", 5)(18, \"label\", 8);\n      i0.ɵɵtext(19, \"Image URL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 0)(22, \"div\", 1)(23, \"div\", 5);\n      i0.ɵɵelement(24, \"img\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 0)(26, \"div\", 1)(27, \"div\", 5)(28, \"label\", 11);\n      i0.ɵɵtext(29, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"textarea\", 12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\", 0)(32, \"div\", 13);\n      i0.ɵɵtemplate(33, RecipeEditComponent_div_33_Template, 8, 0, \"div\", 14);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"src\", ctx.recipeForm.controls[\"image\"].value, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i3.FormGroupName, i3.FormArrayName],\n  styles: [\".img-responsive[_ngcontent-%COMP%] {\\r\\n    width: 200px; \\r\\n    height: auto; \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVjaXBlcy9yZWNpcGUtZWRpdC9yZWNpcGUtZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWSxFQUFFLGtEQUFrRDtJQUNoRSxZQUFZLEVBQUUsdUVBQXVFO0FBQ3pGIiwic291cmNlc0NvbnRlbnQiOlsiLmltZy1yZXNwb25zaXZlIHtcclxuICAgIHdpZHRoOiAyMDBweDsgLyogSGllciBrw4PCtm5uZW4gU2llIGRpZSBnZXfDg8K8bnNjaHRlIEJyZWl0ZSBhbmdlYmVuICovXHJcbiAgICBoZWlnaHQ6IGF1dG87IC8qIERpZSBIw4PCtmhlIHdpcmQgYXV0b21hdGlzY2ggYW5oYW5kIGRlcyBTZWl0ZW52ZXJow4PCpGx0bmlzc2VzIGFuZ2VwYXNzdCAqL1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { RecipeEditComponent };","map":{"version":3,"names":["FormArray","FormControl","FormGroup","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","RecipeEditComponent","constructor","route","recipeS","editMode","oncancel","ngOnInit","params","subscribe","para","id","console","log","initForm","recipeName","recipeImage","recipeDescription","recipeIngredients","recipe","getRecipesById","name","imagePath","description","ingredient","ingredients","push","amount","recipeForm","onSubmit","onCancel","reset","ɵɵdirectiveInject","i1","ActivatedRoute","i2","RecipeService","selectors","decls","vars","consts","template","RecipeEditComponent_Template","rf","ctx","ɵɵlistener","RecipeEditComponent_Template_form_ngSubmit_2_listener","RecipeEditComponent_Template_button_click_7_listener","ɵɵtemplate","RecipeEditComponent_div_33_Template","ɵɵadvance","ɵɵproperty","controls","value","ɵɵsanitizeUrl"],"sources":["C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.ts","C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.html"],"sourcesContent":["import {Component, OnInit, resolveForwardRef} from '@angular/core';\r\nimport {ActivatedRoute, Params} from \"@angular/router\";\r\nimport {FormArray, FormControl, FormGroup} from \"@angular/forms\";\r\nimport {RecipeService} from \"../recipe.service\";\r\n\r\n@Component({\r\n  selector: 'app-recipe-edit',\r\n  templateUrl: './recipe-edit.component.html',\r\n  styleUrls: ['./recipe-edit.component.css']\r\n})\r\nexport class RecipeEditComponent implements OnInit{\r\n\r\n  id : number;\r\n  editMode = false;\r\n  recipeForm : FormGroup;\r\n\r\n  constructor(private route : ActivatedRoute , private recipeS: RecipeService) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(\r\n        (para : Params) => {\r\n          this.id = +para['id'];\r\n          this.editMode = para['id']!=null;\r\n         /* to check if there is an id in the params, if not, that means we are in newMode. */\r\n          console.log('the current need to edit id is ' + this.id)\r\n            console.log('the current Mode is editMode ? ' + this.editMode)\r\n\r\n            this.initForm();\r\n        }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  private initForm(){\r\n    let recipeName = '';\r\n    let recipeImage = '';\r\n    let recipeDescription = '';\r\n    let recipeIngredients = new FormArray([]);\r\n    if(this.editMode){\r\n        const recipe = this.recipeS.getRecipesById(this.id);\r\n        recipeName = recipe.name;\r\n        recipeImage = recipe.imagePath;\r\n        recipeDescription = recipe.description;\r\n\r\n\r\n        if(recipe['ingredients']){\r\n            for(let ingredient of recipe.ingredients){\r\n                recipeIngredients.push(\r\n                    new FormGroup(\r\n                        {\r\n                            'name':new FormControl(ingredient.name),\r\n                            'amount':new FormControl(ingredient.amount)\r\n                        }) );\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n      this.recipeForm = new FormGroup({\r\n          'name' : new FormControl(recipeName),\r\n          'image' : new FormControl(recipeImage),\r\n          'description' : new FormControl(recipeDescription)\r\n\r\n      })\r\n\r\n      console.log(this.recipeForm)\r\n   }\r\n\r\n    onSubmit(){\r\n\r\n    }\r\n    onCancel(){\r\n      this.recipeForm.reset();\r\n      this.editMode = false;\r\n\r\n    }\r\n\r\n    protected readonly oncancel = oncancel;\r\n}\r\n","<div class = \"row\">\r\n    <div class=\"col-xs-12\">\r\n        <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <button class=\"btn btn-success\" type=\"submit\" >Save</button>\r\n\r\n\r\n                    <button class=\"btn btn-primary\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">name</label>\r\n                        <input id=\"name\" type=\"text\" class=\"form-control\" formControlName=\"name\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"image\">Image URL</label>\r\n                        <input id=\"image\" type=\"url\" class=\"form-control\" formControlName=\"image\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                        <img [src]=\"recipeForm.controls['image'].value\" class=\"img-responsive\" formControlName=\"image\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"description\">Description</label>\r\n                        <textarea type=\"text\" id=\"description\" class=\"form-control\" rows=\"6\" formControlName = \"description\"></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\" formArrayName=\"ingredients\">\r\n                    <div class=\"row\"\r\n                         *ngFor=\"\"\r\n                         formGroupName=\"\">\r\n                    <div class=\"col-xs-8\" >\r\n                        <input type=\"text\" class=\"form-control\">\r\n                    </div>\r\n                    <div class=\"col-xs-2\">\r\n                        <input type=\"number\" class=\"form-control\">\r\n                    </div>\r\n                    <div class=\"col-xs-2\">\r\n                        <button class=\"btn-danger , form-control\" >delete</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}