{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/data-storage.service\";\nimport * as i2 from \"../recipes/recipe.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../shared/dropdown.directive\";\nclass HeaderComponent {\n  constructor(ds, rs) {\n    this.ds = ds;\n    this.rs = rs;\n    this.featureSelected = new EventEmitter();\n  }\n  /*onSelect(feature: string){\n    this.featureSelected.emit(feature);  //将feature这个string recipe/shopping-list发送到app\n  }*/\n  ngOnInit() {\n    this.rs.recipesChange.subscribe(recipes => {\n      this.recipes = recipes;\n      this.recipeAmount = this.recipes.length;\n      console.log('check it out');\n      console.log(this.recipes);\n      //总结一下这个方法。 本质上是获取到在service里的db的数据长度。\n      //因为recipeschange是一个subject 因此我们需订阅\n      //订阅到的是一个observable 格式 需要利用回调函数 获取内部的值\n      //获取到的值 通过双向绑定 在一个bootstrap的徽章上显示出来\n    });\n  }\n\n  onSaveData() {\n    this.ds.storeRecipes();\n  }\n  onFetchData() {\n    this.ds.fetchRecipes().subscribe();\n  }\n}\nHeaderComponent.ɵfac = function HeaderComponent_Factory(t) {\n  return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i1.DataStorageService), i0.ɵɵdirectiveInject(i2.RecipeService));\n};\nHeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HeaderComponent,\n  selectors: [[\"app-header\"]],\n  outputs: {\n    featureSelected: \"featureSelected\"\n  },\n  decls: 32,\n  vars: 1,\n  consts: [[1, \"navbar\", \"navbar-default\"], [1, \"container-fluid\"], [1, \"navbar-header\"], [\"href\", \"#\", 1, \"navbar-brand\"], [1, \"navbar-default\"], [1, \"nav\", \"navbar-nav\"], [\"routerLinkActive\", \"active\"], [\"routerLink\", \"/auth\"], [\"routerLink\", \"/recipes\"], [1, \"badge\"], [\"routerLink\", \"/shopping-list\"], [1, \"nav\", \"navbar-nav\", \"navbar-right\"], [2, \"cursor\", \"pointer\"], [\"appDropdown\", \"\", 1, \"dropdown\"], [\"role\", \"button\", 1, \"dropdown-toggle\", 2, \"cursor\", \"pointer\"], [1, \"caret\"], [1, \"dropdown-menu\"], [2, \"cursor\", \"pointer\", 3, \"click\"]],\n  template: function HeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"a\", 3);\n      i0.ɵɵtext(4, \"Recipe Book\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"ul\", 5)(7, \"li\", 6)(8, \"a\", 7);\n      i0.ɵɵtext(9, \"Authenticate\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"li\", 6)(11, \"a\", 8);\n      i0.ɵɵtext(12, \"Recipes \");\n      i0.ɵɵelementStart(13, \"span\", 9);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"li\", 6)(16, \"a\", 10);\n      i0.ɵɵtext(17, \"Shopping List\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(18, \"ul\", 11)(19, \"a\", 12);\n      i0.ɵɵtext(20, \"logout\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"li\", 13)(22, \"a\", 14);\n      i0.ɵɵtext(23, \"Manage \");\n      i0.ɵɵelement(24, \"span\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"ul\", 16)(26, \"li\", 17);\n      i0.ɵɵlistener(\"click\", function HeaderComponent_Template_li_click_26_listener() {\n        return ctx.onSaveData();\n      });\n      i0.ɵɵelementStart(27, \"a\");\n      i0.ɵɵtext(28, \"Save Data\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"li\", 17);\n      i0.ɵɵlistener(\"click\", function HeaderComponent_Template_li_click_29_listener() {\n        return ctx.onFetchData();\n      });\n      i0.ɵɵelementStart(30, \"a\");\n      i0.ɵɵtext(31, \"Fetch Data\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵtextInterpolate(ctx.recipeAmount);\n    }\n  },\n  dependencies: [i3.RouterLink, i3.RouterLinkActive, i4.DropdownDirective],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { HeaderComponent };","map":{"version":3,"names":["EventEmitter","HeaderComponent","constructor","ds","rs","featureSelected","ngOnInit","recipesChange","subscribe","recipes","recipeAmount","length","console","log","onSaveData","storeRecipes","onFetchData","fetchRecipes","i0","ɵɵdirectiveInject","i1","DataStorageService","i2","RecipeService","selectors","outputs","decls","vars","consts","template","HeaderComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","HeaderComponent_Template_li_click_26_listener","HeaderComponent_Template_li_click_29_listener","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\header\\header.component.ts","C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\header\\header.component.html"],"sourcesContent":["import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {DataStorageService} from \"../shared/data-storage.service\";\r\nimport {RecipeService} from \"../recipes/recipe.service\";\r\nimport {Recipe} from \"../recipes/recipe.model\";\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit{\r\n  @Output() featureSelected = new EventEmitter<string>();\r\n\r\n\r\n  constructor(private ds : DataStorageService ,\r\n              private rs : RecipeService) {\r\n  }\r\n\r\n  recipeAmount : number;\r\n  recipes : Recipe[];\r\n\r\n  /*onSelect(feature: string){\r\n    this.featureSelected.emit(feature);  //将feature这个string recipe/shopping-list发送到app\r\n  }*/\r\n\r\n  ngOnInit(){\r\n\r\n    this.rs.recipesChange.subscribe(\r\n        (recipes: Recipe[])  => {\r\n          this.recipes  = recipes;\r\n          this.recipeAmount = this.recipes.length;\r\n          console.log('check it out')\r\n          console.log(this.recipes)\r\n          //总结一下这个方法。 本质上是获取到在service里的db的数据长度。\r\n          //因为recipeschange是一个subject 因此我们需订阅\r\n          //订阅到的是一个observable 格式 需要利用回调函数 获取内部的值\r\n          //获取到的值 通过双向绑定 在一个bootstrap的徽章上显示出来\r\n    }\r\n    )\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  onSaveData(){\r\n  this.ds.storeRecipes();\r\n\r\n  }\r\n\r\n  onFetchData(){\r\n  this.ds.fetchRecipes().subscribe();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-default\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"navbar-header\">\r\n            <a href=\"#\" class=\"navbar-brand\">Recipe Book</a>\r\n        </div>\r\n        <div class=\"navbar-default\">\r\n            <ul class=\"nav navbar-nav\">\r\n                <li routerLinkActive=\"active\" ><a routerLink=\"/auth\">Authenticate</a></li>\r\n                <li routerLinkActive=\"active\" ><a routerLink=\"/recipes\">Recipes <span class=\"badge\">{{recipeAmount}}</span></a></li>\r\n                <li routerLinkActive=\"active\" ><a routerLink=\"/shopping-list\">Shopping List</a></li>\r\n\r\n\r\n\r\n            </ul>\r\n\r\n\r\n\r\n            <ul class=\"nav navbar-nav navbar-right\">\r\n                <a style=\"cursor: pointer\">logout</a>\r\n                <li class=\"dropdown\" appDropdown>\r\n                    <a style=\"cursor: pointer\" class=\"dropdown-toggle\" role=\"button\" >Manage <span class=\"caret\"></span></a>\r\n                        <ul class=\"dropdown-menu\">\r\n                            <li style=\"cursor: pointer\" (click)=\"onSaveData()\"><a>Save Data</a></li>\r\n                            <li style=\"cursor: pointer\" (click)=\"onFetchData()\"><a>Fetch Data</a></li>\r\n\r\n                        </ul>\r\n\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n</nav>\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}