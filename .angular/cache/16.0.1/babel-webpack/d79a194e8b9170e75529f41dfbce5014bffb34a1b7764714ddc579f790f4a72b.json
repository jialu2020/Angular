{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../shared/loadingSpinner/loadingSpinner\";\nfunction AuthComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_form_4_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.error);\n  }\n}\nfunction AuthComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 7)(2, \"label\", 8);\n    i0.ɵɵtext(3, \" Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 7)(6, \"label\");\n    i0.ɵɵtext(7, \"password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, AuthComponent_form_4_div_9_Template, 3, 1, \"div\", 11);\n    i0.ɵɵelementStart(10, \"div\")(11, \"button\", 12);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AuthComponent_form_4_Template_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onSwitchMode());\n    });\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.authForm);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.error);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.authForm.invalid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.isLoginMode ? \"Login\" : \"register\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"switch to \", ctx_r1.isLoginMode ? \"Sign up\" : \"Login\", \"\");\n  }\n}\nclass AuthComponent {\n  constructor(as, router) {\n    this.as = as;\n    this.router = router;\n    this.isLoading = false;\n    this.error = null;\n  }\n  onSwitchMode() {\n    this.isLoginMode = !this.isLoginMode;\n    console.log(this.isLoginMode);\n  }\n  ngOnInit() {\n    this.authForm = new FormGroup({\n      'email': new FormControl('max@test.com', [Validators.required, Validators.email]),\n      'password': new FormControl('', [Validators.required, Validators.minLength(1)])\n    });\n  }\n  onSubmit() {\n    if (this.authForm.valid) {\n      const email = this.authForm.get('email').value;\n      const password = this.authForm.value['password'];\n      let authObs;\n      this.isLoading = true;\n      //等效\n      if (this.isLoginMode) {\n        authObs = this.as.login(email, password);\n      } else {\n        authObs = this.as.signup(email, password);\n      }\n      authObs.subscribe(response => {\n        console.log(response);\n        this.isLoading = false;\n        this.router.navigate(['/recipe']);\n      }, errorRes => {\n        console.log(errorRes);\n        this.error = errorRes;\n        this.isLoading = false;\n      });\n      this.authForm.reset();\n    } else return;\n  }\n}\nAuthComponent.ɵfac = function AuthComponent_Factory(t) {\n  return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthComponent,\n  selectors: [[\"app-auth\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"row\", 2, \"margin-top\", \"40px\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [\"style\", \"text-align: center ; margin-top: 50px\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [2, \"text-align\", \"center\", \"margin-top\", \"50px\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\", 2, \"margin-right\", \"20px\", 3, \"disabled\"], [1, \"btn\", \"btn-default\", 3, \"click\"], [1, \"alert\", \"alert-danger\"]],\n  template: function AuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, AuthComponent_div_3_Template, 2, 0, \"div\", 3);\n      i0.ɵɵtemplate(4, AuthComponent_form_4_Template, 15, 5, \"form\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i5.LoadingSpinnerComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AuthComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate","ctx_r2","error","ɵɵlistener","AuthComponent_form_4_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r4","ctx_r3","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵtemplate","AuthComponent_form_4_div_9_Template","AuthComponent_form_4_Template_button_click_13_listener","ctx_r5","onSwitchMode","ɵɵproperty","ctx_r1","authForm","invalid","isLoginMode","ɵɵtextInterpolate1","AuthComponent","constructor","as","router","isLoading","console","log","ngOnInit","required","email","minLength","valid","get","value","password","authObs","login","signup","subscribe","response","navigate","errorRes","reset","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","AuthComponent_Template","rf","ctx","AuthComponent_div_3_Template","AuthComponent_form_4_Template"],"sources":["C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\auth\\auth.component.ts","C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\auth\\auth.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AuthResponseData, AuthService} from \"./auth.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport { Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit{\r\n    authForm : FormGroup;\r\n    isLoginMode : boolean;\r\n    isLoading = false;\r\n    error :string = null ;\r\n\r\n    constructor(private as : AuthService, private router : Router ) {\r\n    }\r\n\r\n\r\n\r\n\r\n   onSwitchMode(){\r\n     this.isLoginMode = !this.isLoginMode;\r\n     console.log(this.isLoginMode)\r\n   }\r\n\r\n    ngOnInit(): void {\r\n       this.authForm = new FormGroup(\r\n           {\r\n               'email': new FormControl('max@test.com',\r\n                   [Validators.required,Validators.email]),\r\n\r\n               'password' : new FormControl('' ,\r\n                   [Validators.required , Validators.minLength(1) ])\r\n           }\r\n       )\r\n\r\n    }\r\n\r\n    onSubmit(){\r\n\r\n       if(this.authForm.valid){\r\n\r\n           const email = this.authForm.get('email').value\r\n           const password = this.authForm.value['password'];\r\n           let authObs : Observable<AuthResponseData>\r\n\r\n           this.isLoading = true;\r\n           //等效\r\n\r\n           if(this.isLoginMode){\r\n               authObs = this.as.login(email,password);\r\n           }else {\r\n               authObs = this.as.signup(email,password);\r\n\r\n\r\n           }\r\n        authObs.subscribe(\r\n           response =>{\r\n               console.log(response)\r\n               this.isLoading= false;\r\n               this.router.navigate(['/recipe'],)\r\n           },errorRes => {\r\n               console.log(errorRes);\r\n               this.error =errorRes;\r\n               this.isLoading = false;\r\n           });\r\n\r\n           this.authForm.reset();\r\n       }else return;\r\n\r\n\r\n    }\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n    <div class=\"row\" style=\"margin-top: 40px\">\r\n        <div class=\"col-xs-12 col-md-6 col-md-offset-3\" >\r\n\r\n            <div *ngIf=\"isLoading\" style=\"text-align: center ; margin-top: 50px\"><app-loading-spinner></app-loading-spinner></div>\r\n            <form [formGroup]=\"authForm\"  (ngSubmit)=\"onSubmit()\" *ngIf=\"!isLoading\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"email\"> Email</label>\r\n                    <input id=\"email\"  type=\"email\" class=\"form-control\" formControlName=\"email\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>password</label>\r\n                    <input id=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n                </div>\r\n                <div class=\"alert alert-danger\" *ngIf=\"error\"><p>{{error}}</p></div>\r\n                <div>\r\n                    <button class=\"btn btn-default\" style=\"margin-right: 20px\" type=\"submit\"\r\n                            [disabled]=\"authForm.invalid\"\r\n                    >{{ isLoginMode ? 'Login' : 'register'}}</button>\r\n\r\n                    <button class=\"btn btn-default\" (click)=\"onSwitchMode()\">switch to {{ isLoginMode ? 'Sign up' : 'Login'}}</button>\r\n                </div>\r\n\r\n\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}