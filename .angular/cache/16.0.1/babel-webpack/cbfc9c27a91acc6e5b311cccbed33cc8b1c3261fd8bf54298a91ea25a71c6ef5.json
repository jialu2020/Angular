{"ast":null,"code":"import { FormControl, FormGroup } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../recipe.service\";\nimport * as i3 from \"@angular/forms\";\nclass RecipeEditComponent {\n  constructor(route, recipeS) {\n    this.route = route;\n    this.recipeS = recipeS;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(para => {\n      this.id = +para['id'];\n      this.editMode = para['id'] != null;\n      /* to check if there is an id in the params, if not, that means we are in newMode. */\n      console.log('the current need to edit id is ' + this.id);\n      console.log('the current Mode is editMode ? ' + this.editMode);\n      this.initForm();\n    });\n  }\n  initForm() {\n    let recipeName = '';\n    let recipeImage = '';\n    let recipeDescription = '';\n    if (this.editMode) {\n      const recipe = this.recipeS.getRecipesById(this.id);\n      recipeName = recipe.name;\n      recipeImage = recipe.imagePath;\n      recipeDescription = recipe.description;\n    }\n    this.recipeForm = new FormGroup({\n      'name': new FormControl(recipeName),\n      'image': new FormControl(recipeImage),\n      'description': new FormControl(recipeDescription)\n    });\n    console.log(this.recipeForm);\n  }\n  onSubmit() {}\n}\nRecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n  return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.RecipeService));\n};\nRecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeEditComponent,\n  selectors: [[\"app-recipe-edit\"]],\n  decls: 40,\n  vars: 2,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"], [1, \"form-group\"], [\"for\", \"name\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"for\", \"image\"], [\"id\", \"image\", \"type\", \"url\", \"formControlName\", \"image\", 1, \"form-control\"], [\"formControlName\", \"image\", 1, \"img-responsive\", 3, \"src\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"rows\", \"6\", \"formControlName\", \"description\", 1, \"form-control\"], [1, \"col-xs-8\"], [\"type\", \"text\", 1, \"form-control\"], [1, \"col-xs-2\"], [\"type\", \"number\", 1, \"form-control\"], [1, \"btn-danger\", \",\", \"form-control\"]],\n  template: function RecipeEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RecipeEditComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"button\", 3);\n      i0.ɵɵtext(6, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 4);\n      i0.ɵɵtext(8, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"div\", 0)(10, \"div\", 1)(11, \"div\", 5)(12, \"label\", 6);\n      i0.ɵɵtext(13, \"name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"div\", 5)(18, \"label\", 8);\n      i0.ɵɵtext(19, \"Image URL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 9);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 0)(22, \"div\", 1)(23, \"div\", 5);\n      i0.ɵɵelement(24, \"img\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 0)(26, \"div\", 1)(27, \"div\", 5)(28, \"label\", 11);\n      i0.ɵɵtext(29, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"textarea\", 12);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(31, \"div\", 0)(32, \"div\", 1)(33, \"div\", 13);\n      i0.ɵɵelement(34, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 15);\n      i0.ɵɵelement(36, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 15)(38, \"button\", 17);\n      i0.ɵɵtext(39, \"delete\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.recipeForm);\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"src\", ctx.recipeForm.controls[\"image\"].value, i0.ɵɵsanitizeUrl);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RecipeEditComponent };","map":{"version":3,"names":["FormControl","FormGroup","RecipeEditComponent","constructor","route","recipeS","editMode","ngOnInit","params","subscribe","para","id","console","log","initForm","recipeName","recipeImage","recipeDescription","recipe","getRecipesById","name","imagePath","description","recipeForm","onSubmit","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","RecipeService","selectors","decls","vars","consts","template","RecipeEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RecipeEditComponent_Template_form_ngSubmit_2_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","controls","value","ɵɵsanitizeUrl"],"sources":["C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.ts","C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.html"],"sourcesContent":["import {Component, OnInit, resolveForwardRef} from '@angular/core';\r\nimport {ActivatedRoute, Params} from \"@angular/router\";\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {RecipeService} from \"../recipe.service\";\r\n\r\n@Component({\r\n  selector: 'app-recipe-edit',\r\n  templateUrl: './recipe-edit.component.html',\r\n  styleUrls: ['./recipe-edit.component.css']\r\n})\r\nexport class RecipeEditComponent implements OnInit{\r\n\r\n  id : number;\r\n  editMode = false;\r\n  recipeForm : FormGroup;\r\n\r\n  constructor(private route : ActivatedRoute , private recipeS: RecipeService) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(\r\n        (para : Params) => {\r\n          this.id = +para['id'];\r\n          this.editMode = para['id']!=null;\r\n         /* to check if there is an id in the params, if not, that means we are in newMode. */\r\n          console.log('the current need to edit id is ' + this.id)\r\n            console.log('the current Mode is editMode ? ' + this.editMode)\r\n\r\n            this.initForm();\r\n        }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  private initForm(){\r\n    let recipeName = '';\r\n    let recipeImage = '';\r\n    let recipeDescription = '';\r\n\r\n    if(this.editMode){\r\n        const recipe = this.recipeS.getRecipesById(this.id);\r\n        recipeName = recipe.name;\r\n        recipeImage = recipe.imagePath;\r\n        recipeDescription = recipe.description;\r\n\r\n    }\r\n\r\n      this.recipeForm = new FormGroup({\r\n          'name' : new FormControl(recipeName),\r\n          'image' : new FormControl(recipeImage),\r\n          'description' : new FormControl(recipeDescription)\r\n\r\n      })\r\n\r\n      console.log(this.recipeForm)\r\n   }\r\n\r\n    onSubmit(){\r\n      \r\n    }\r\n}\r\n","<div class = \"row\">\r\n    <div class=\"col-xs-12\">\r\n        <form [formGroup]=\"recipeForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <button class=\"btn btn-success\" type=\"submit\" >Save</button>\r\n\r\n\r\n                    <button class=\"btn btn-primary\" type=\"button\">Cancel</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"name\">name</label>\r\n                        <input id=\"name\" type=\"text\" class=\"form-control\" formControlName=\"name\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"image\">Image URL</label>\r\n                        <input id=\"image\" type=\"url\" class=\"form-control\" formControlName=\"image\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                        <img [src]=\"recipeForm.controls['image'].value\" class=\"img-responsive\" formControlName=\"image\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"description\">Description</label>\r\n                        <textarea type=\"text\" id=\"description\" class=\"form-control\" rows=\"6\" formControlName = \"description\"></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <div class=\"col-xs-8\">\r\n                        <input type=\"text\" class=\"form-control\">\r\n                    </div>\r\n                    <div class=\"col-xs-2\">\r\n                        <input type=\"number\" class=\"form-control\">\r\n                    </div>\r\n                    <div class=\"col-xs-2\">\r\n                        <button class=\"btn-danger , form-control\" >delete</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}