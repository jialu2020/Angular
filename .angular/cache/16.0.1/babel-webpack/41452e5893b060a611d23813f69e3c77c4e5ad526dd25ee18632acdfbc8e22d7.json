{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../shared/loadingSpinner/loadingSpinner\";\nfunction AuthComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AuthComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 6)(2, \"label\", 7);\n    i0.ɵɵtext(3, \" Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"label\");\n    i0.ɵɵtext(7, \"password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\")(10, \"button\", 10);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function AuthComponent_form_4_Template_button_click_12_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSwitchMode());\n    });\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.authForm);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.authForm.invalid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.isloginMode ? \"Login\" : \"Sign up\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"switch to \", ctx_r1.isloginMode ? \"Sign up\" : \"Login\", \"\");\n  }\n}\nclass AuthComponent {\n  constructor(as) {\n    this.as = as;\n    this.isLoading = false;\n  }\n  onSwitchMode() {\n    this.isloginMode = !this.isloginMode;\n    console.log(this.isloginMode);\n  }\n  ngOnInit() {\n    this.authForm = new FormGroup({\n      'email': new FormControl('max@test.com', [Validators.required, Validators.email]),\n      'password': new FormControl('', [Validators.required, Validators.minLength(1)])\n    });\n  }\n  onSubmit() {\n    if (this.authForm.valid) {\n      const email = this.authForm.get('email').value;\n      const password = this.authForm.value['password'];\n      this.isLoading = true;\n      //等效\n      if (this.isloginMode) {} else {\n        this.as.signup(email, password).subscribe(response => {\n          console.log(response);\n          this.isLoading = false;\n        }, error => {\n          console.log(error);\n          this.isLoading = false;\n        });\n        this.authForm.reset();\n      }\n    } else return;\n  }\n}\nAuthComponent.ɵfac = function AuthComponent_Factory(t) {\n  return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthComponent,\n  selectors: [[\"app-auth\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[1, \"container\"], [1, \"row\", 2, \"margin-top\", \"40px\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\", 2, \"margin-right\", \"20px\", 3, \"disabled\"], [1, \"btn\", \"btn-default\", 3, \"click\"]],\n  template: function AuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, AuthComponent_div_3_Template, 2, 0, \"div\", 3);\n      i0.ɵɵtemplate(4, AuthComponent_form_4_Template, 14, 4, \"form\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName, i4.LoadingSpinnerComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AuthComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵlistener","AuthComponent_form_4_Template_form_ngSubmit_0_listener","ɵɵrestoreView","_r3","ctx_r2","ɵɵnextContext","ɵɵresetView","onSubmit","ɵɵtext","AuthComponent_form_4_Template_button_click_12_listener","ctx_r4","onSwitchMode","ɵɵproperty","ctx_r1","authForm","ɵɵadvance","invalid","ɵɵtextInterpolate","isloginMode","ɵɵtextInterpolate1","AuthComponent","constructor","as","isLoading","console","log","ngOnInit","required","email","minLength","valid","get","value","password","signup","subscribe","response","error","reset","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","AuthComponent_Template","rf","ctx","ɵɵtemplate","AuthComponent_div_3_Template","AuthComponent_form_4_Template"],"sources":["C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\auth\\auth.component.ts","C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\auth\\auth.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit{\r\n    authForm : FormGroup;\r\n    isloginMode : boolean;\r\n    isLoading = false;\r\n    constructor(private as : AuthService) {\r\n    }\r\n\r\n\r\n\r\n\r\n   onSwitchMode(){\r\n     this.isloginMode = !this.isloginMode;\r\n     console.log(this.isloginMode)\r\n   }\r\n\r\n    ngOnInit(): void {\r\n       this.authForm = new FormGroup(\r\n           {\r\n               'email': new FormControl('max@test.com',\r\n                   [Validators.required,Validators.email]),\r\n\r\n               'password' : new FormControl('' ,\r\n                   [Validators.required , Validators.minLength(1) ])\r\n           }\r\n       )\r\n\r\n    }\r\n\r\n    onSubmit(){\r\n\r\n       if(this.authForm.valid){\r\n\r\n           const email = this.authForm.get('email').value\r\n           const password = this.authForm.value['password'];\r\n\r\n           this.isLoading = true;\r\n           //等效\r\n\r\n           if(this.isloginMode){\r\n\r\n           }else {\r\n               this.as.signup(email,password).subscribe(\r\n                   response =>{\r\n                       console.log(response)\r\n                       this.isLoading= false;\r\n                   },error => {\r\n                       console.log(error)\r\n                       this.isLoading = false;\r\n                   }\r\n               )\r\n\r\n               this.authForm.reset();\r\n           }\r\n\r\n       }else return;\r\n\r\n\r\n    }\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n    <div class=\"row\" style=\"margin-top: 40px\">\r\n        <div class=\"col-xs-12 col-md-6 col-md-offset-3\" >\r\n            <div *ngIf=\"isLoading\"><app-loading-spinner></app-loading-spinner></div>\r\n            <form [formGroup]=\"authForm\"  (ngSubmit)=\"onSubmit()\" *ngIf=\"!isLoading\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"email\"> Email</label>\r\n                    <input id=\"email\"  type=\"email\" class=\"form-control\" formControlName=\"email\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>password</label>\r\n                    <input id=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n                </div>\r\n                <div>\r\n                    <button class=\"btn btn-default\" style=\"margin-right: 20px\" type=\"submit\"\r\n                            [disabled]=\"authForm.invalid\"\r\n                    >{{ isloginMode ? 'Login' : 'Sign up'}}</button>\r\n\r\n                    <button class=\"btn btn-default\" (click)=\"onSwitchMode()\">switch to {{ isloginMode ? 'Sign up' : 'Login'}}</button>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}