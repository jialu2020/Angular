{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nclass RecipeEditComponent {\n  constructor(route) {\n    this.route = route;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(para => {\n      this.id = +para['id'];\n      this.editMode = para['id'] != null;\n      /* to check if there is an id in the params, if not, that means we are in newMode. */\n      console.log('the current need to edit id is ' + this.id);\n      console.log('the current Mode is editMode ? ' + this.editMode);\n    });\n  }\n}\nRecipeEditComponent.ɵfac = function RecipeEditComponent_Factory(t) {\n  return new (t || RecipeEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nRecipeEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecipeEditComponent,\n  selectors: [[\"app-recipe-edit\"]],\n  decls: 11,\n  vars: 0,\n  consts: [[1, \"row\"], [1, \"col-xs-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function RecipeEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\")(3, \"div\", 0)(4, \"div\", 1)(5, \"button\", 2);\n      i0.ɵɵtext(6, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 3);\n      i0.ɵɵtext(8, \"Cancel\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(9, \"p\");\n      i0.ɵɵtext(10, \"recipe-edit works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RecipeEditComponent };","map":{"version":3,"names":["RecipeEditComponent","constructor","route","editMode","ngOnInit","params","subscribe","para","id","console","log","i0","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","decls","vars","consts","template","RecipeEditComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.ts","C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\recipes\\recipe-edit\\recipe-edit.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Params} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-recipe-edit',\r\n  templateUrl: './recipe-edit.component.html',\r\n  styleUrls: ['./recipe-edit.component.css']\r\n})\r\nexport class RecipeEditComponent implements OnInit{\r\n\r\n  id : number;\r\n  editMode = false;\r\n\r\n  constructor(private route : ActivatedRoute) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(\r\n        (para : Params) => {\r\n          this.id = +para['id'];\r\n          this.editMode = para['id']!=null;\r\n         /* to check if there is an id in the params, if not, that means we are in newMode. */\r\n          console.log('the current need to edit id is ' + this.id)\r\n            console.log('the current Mode is editMode ? ' + this.editMode)\r\n        }\r\n    );\r\n  }\r\n\r\n}\r\n","<div class = \"row\">\r\n    <div class=\"col-xs-12\">\r\n        <form>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12\">\r\n                    <button class=\"btn btn-success\" type=\"submit\">Save</button>\r\n                    <button class=\"btn btn-primary\" type=\"submit\">Cancel</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<p >recipe-edit works!</p>\r\n"],"mappings":";;;AAGA,MAKaA,mBAAmB;EAK9BC,YAAoBC,KAAsB;IAAtB,KAAAA,KAAK,GAALA,KAAK;IAFzB,KAAAC,QAAQ,GAAG,KAAK;EAGhB;EACAC,QAAQA,CAAA;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CACtBC,IAAa,IAAI;MAChB,IAAI,CAACC,EAAE,GAAG,CAACD,IAAI,CAAC,IAAI,CAAC;MACrB,IAAI,CAACJ,QAAQ,GAAGI,IAAI,CAAC,IAAI,CAAC,IAAE,IAAI;MACjC;MACCE,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAG,IAAI,CAACF,EAAE,CAAC;MACtDC,OAAO,CAACC,GAAG,CAAC,iCAAiC,GAAG,IAAI,CAACP,QAAQ,CAAC;IAClE,CAAC,CACJ;EACH;;AAjBWH,mBAAmB,C;mBAAnBA,mBAAmB,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAnBd,mBAAmB,C;QAAnBA,mBAAmB;EAAAe,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRhCV,EAAA,CAAAY,cAAA,aAAmB;MAK+CZ,EAAA,CAAAa,MAAA,WAAI;MAAAb,EAAA,CAAAc,YAAA,EAAS;MAC3Dd,EAAA,CAAAY,cAAA,gBAA8C;MAAAZ,EAAA,CAAAa,MAAA,aAAM;MAAAb,EAAA,CAAAc,YAAA,EAAS;MAYjFd,EAAA,CAAAY,cAAA,QAAI;MAAAZ,EAAA,CAAAa,MAAA,0BAAkB;MAAAb,EAAA,CAAAc,YAAA,EAAI;;;;;;SDVbzB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}