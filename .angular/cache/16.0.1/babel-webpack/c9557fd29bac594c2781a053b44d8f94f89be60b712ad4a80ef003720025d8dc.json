{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nclass AuthComponent {\n  onSwitchMode() {\n    this.isloginMode = !this.isloginMode;\n    console.log(this.isloginMode);\n  }\n  ngOnInit() {\n    this.authForm = new FormGroup({\n      'emails': new FormControl('admin', [Validators.required, Validators.email]),\n      'password ': new FormControl('', Validators.required)\n    });\n  }\n  onSubmit() {}\n}\nAuthComponent.ɵfac = function AuthComponent_Factory(t) {\n  return new (t || AuthComponent)();\n};\nAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthComponent,\n  selectors: [[\"app-auth\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"row\", 2, \"margin-top\", \"40px\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\", 2, \"margin-right\", \"20px\"], [1, \"btn\", \"btn-default\", 3, \"click\"]],\n  template: function AuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \" Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\");\n      i0.ɵɵtext(10, \"password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"button\", 8);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_15_listener() {\n        return ctx.onSwitchMode();\n      });\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate(ctx.isloginMode ? \"Login\" : \"Sign up\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"switch to \", ctx.isloginMode ? \"Sign up\" : \"Login\", \"\");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AuthComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","AuthComponent","onSwitchMode","isloginMode","console","log","ngOnInit","authForm","required","email","onSubmit","selectors","decls","vars","consts","template","AuthComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","AuthComponent_Template_form_ngSubmit_3_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","AuthComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","ɵɵtextInterpolate1"],"sources":["C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\auth\\auth\\auth.component.ts","C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\auth\\auth\\auth.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit{\r\n    authForm : FormGroup;\r\n    isloginMode : boolean;\r\n\r\n\r\n\r\n\r\n   onSwitchMode(){\r\n     this.isloginMode = !this.isloginMode;\r\n     console.log(this.isloginMode)\r\n   }\r\n\r\n    ngOnInit(): void {\r\n       this.authForm = new FormGroup(\r\n           {\r\n               'emails': new FormControl('admin', [Validators.required,Validators.email]),\r\n               'password ' : new FormControl('' , Validators.required )\r\n\r\n           }\r\n\r\n\r\n       )\r\n    }\r\n\r\n    onSubmit(){\r\n       \r\n    }\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n    <div class=\"row\" style=\"margin-top: 40px\">\r\n        <div class=\"col-xs-12 col-md-6 col-md-offset-3\" >\r\n            <form [formGroup]=\"authForm\"  (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"email\"> Email</label>\r\n                    <input id=\"email\"  type=\"email\" class=\"form-control\" formControlName=\"email\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>password</label>\r\n                    <input id=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n                </div>\r\n                <div>\r\n                    <button class=\"btn btn-default\" style=\"margin-right: 20px\" type=\"submit\">{{ isloginMode ? 'Login' : 'Sign up'}}</button>\r\n\r\n                    <button class=\"btn btn-default\" (click)=\"onSwitchMode()\">switch to {{ isloginMode ? 'Sign up' : 'Login'}}</button>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n"],"mappings":"AACA,SAAQA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;;;AAEjE,MAKaC,aAAa;EAOvBC,YAAYA,CAAA;IACV,IAAI,CAACC,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;IACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,WAAW,CAAC;EAC/B;EAECG,QAAQA,CAAA;IACL,IAAI,CAACC,QAAQ,GAAG,IAAIR,SAAS,CACzB;MACI,QAAQ,EAAE,IAAID,WAAW,CAAC,OAAO,EAAE,CAACE,UAAU,CAACQ,QAAQ,EAACR,UAAU,CAACS,KAAK,CAAC,CAAC;MAC1E,WAAW,EAAG,IAAIX,WAAW,CAAC,EAAE,EAAGE,UAAU,CAACQ,QAAQ;KAEzD,CAGJ;EACJ;EAEAE,QAAQA,CAAA,GAER;;AA1BST,aAAa,C;mBAAbA,aAAa;AAAA;AAAbA,aAAa,C;QAAbA,aAAa;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR1BE,EAAA,CAAAC,cAAA,aAAuB;MAKmBD,EAAA,CAAAE,UAAA,sBAAAC,gDAAA;QAAA,OAAYJ,GAAA,CAAAR,QAAA,EAAU;MAAA,EAAC;MACjDS,EAAA,CAAAC,cAAA,aAAwB;MACAD,EAAA,CAAAI,MAAA,aAAK;MAAAJ,EAAA,CAAAK,YAAA,EAAQ;MACjCL,EAAA,CAAAM,SAAA,eAA6E;MACjFN,EAAA,CAAAK,YAAA,EAAM;MACNL,EAAA,CAAAC,cAAA,aAAwB;MACbD,EAAA,CAAAI,MAAA,gBAAQ;MAAAJ,EAAA,CAAAK,YAAA,EAAQ;MACvBL,EAAA,CAAAM,SAAA,gBAAqF;MACzFN,EAAA,CAAAK,YAAA,EAAM;MACNL,EAAA,CAAAC,cAAA,WAAK;MACwED,EAAA,CAAAI,MAAA,IAAsC;MAAAJ,EAAA,CAAAK,YAAA,EAAS;MAExHL,EAAA,CAAAC,cAAA,iBAAyD;MAAzBD,EAAA,CAAAE,UAAA,mBAAAK,gDAAA;QAAA,OAASR,GAAA,CAAAhB,YAAA,EAAc;MAAA,EAAC;MAACiB,EAAA,CAAAI,MAAA,IAAgD;MAAAJ,EAAA,CAAAK,YAAA,EAAS;;;MAZpHL,EAAA,CAAAQ,SAAA,GAAsB;MAAtBR,EAAA,CAAAS,UAAA,cAAAV,GAAA,CAAAX,QAAA,CAAsB;MAUqDY,EAAA,CAAAQ,SAAA,IAAsC;MAAtCR,EAAA,CAAAU,iBAAA,CAAAX,GAAA,CAAAf,WAAA,uBAAsC;MAEtDgB,EAAA,CAAAQ,SAAA,GAAgD;MAAhDR,EAAA,CAAAW,kBAAA,eAAAZ,GAAA,CAAAf,WAAA,2BAAgD;;;;;;SDThHF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}