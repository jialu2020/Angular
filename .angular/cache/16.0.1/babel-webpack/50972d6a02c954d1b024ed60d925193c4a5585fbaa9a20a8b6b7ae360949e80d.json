{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/forms\";\nclass AuthComponent {\n  constructor(as) {\n    this.as = as;\n  }\n  onSwitchMode() {\n    this.isloginMode = !this.isloginMode;\n    console.log(this.isloginMode);\n  }\n  ngOnInit() {\n    this.authForm = new FormGroup({\n      'email': new FormControl('max@test.com', [Validators.required, Validators.email]),\n      'password': new FormControl('', [Validators.required, Validators.minLength(1)])\n    });\n    console.log(this.authForm.value);\n  }\n  onSubmit() {\n    if (this.authForm.valid) {\n      const email = this.authForm.get('email').value;\n      const password = this.authForm.value['password'];\n      //等效\n      this.as.signup(email, password).subscribe();\n      console.log(email);\n      console.log(password);\n      this.authForm.reset();\n    } else return;\n  }\n}\nAuthComponent.ɵfac = function AuthComponent_Factory(t) {\n  return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthComponent,\n  selectors: [[\"app-auth\"]],\n  decls: 17,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"row\", 2, \"margin-top\", \"40px\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\", 2, \"margin-right\", \"20px\", 3, \"disabled\"], [1, \"btn\", \"btn-default\", 3, \"click\"]],\n  template: function AuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \" Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\");\n      i0.ɵɵtext(10, \"password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"button\", 8);\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_15_listener() {\n        return ctx.onSwitchMode();\n      });\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.authForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"disabled\", ctx.authForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate(ctx.isloginMode ? \"Login\" : \"Sign up\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"switch to \", ctx.isloginMode ? \"Sign up\" : \"Login\", \"\");\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { AuthComponent };","map":{"version":3,"names":["FormControl","FormGroup","Validators","AuthComponent","constructor","as","onSwitchMode","isloginMode","console","log","ngOnInit","authForm","required","email","minLength","value","onSubmit","valid","get","password","signup","subscribe","reset","i0","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","AuthComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AuthComponent_Template_form_ngSubmit_3_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","AuthComponent_Template_button_click_15_listener","ɵɵadvance","ɵɵproperty","invalid","ɵɵtextInterpolate","ɵɵtextInterpolate1"],"sources":["C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\auth\\auth.component.ts","C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\auth\\auth.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AuthService} from \"./auth.service\";\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit{\r\n    authForm : FormGroup;\r\n    isloginMode : boolean;\r\n    constructor(private as : AuthService) {\r\n    }\r\n\r\n\r\n\r\n\r\n   onSwitchMode(){\r\n     this.isloginMode = !this.isloginMode;\r\n     console.log(this.isloginMode)\r\n   }\r\n\r\n    ngOnInit(): void {\r\n       this.authForm = new FormGroup(\r\n           {\r\n               'email': new FormControl('max@test.com',\r\n                   [Validators.required,Validators.email]),\r\n\r\n               'password' : new FormControl('' ,\r\n                   [Validators.required , Validators.minLength(1) ])\r\n           }\r\n       )\r\n        console.log(this.authForm.value)\r\n    }\r\n\r\n    onSubmit(){\r\n       if(this.authForm.valid){\r\n           const email = this.authForm.get('email').value\r\n           const password = this.authForm.value['password']\r\n           //等效\r\n\r\n           this.as.signup(email,password).subscribe()\r\n\r\n\r\n           console.log(email)\r\n           console.log(password)\r\n\r\n           this.authForm.reset();\r\n       }else return;\r\n\r\n\r\n    }\r\n}\r\n","<div class=\"container\">\r\n\r\n\r\n    <div class=\"row\" style=\"margin-top: 40px\">\r\n        <div class=\"col-xs-12 col-md-6 col-md-offset-3\" >\r\n            <form [formGroup]=\"authForm\"  (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"email\"> Email</label>\r\n                    <input id=\"email\"  type=\"email\" class=\"form-control\" formControlName=\"email\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>password</label>\r\n                    <input id=\"password\" type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n                </div>\r\n                <div>\r\n                    <button class=\"btn btn-default\" style=\"margin-right: 20px\" type=\"submit\"\r\n                            [disabled]=\"authForm.invalid\"\r\n                    >{{ isloginMode ? 'Login' : 'Sign up'}}</button>\r\n\r\n                    <button class=\"btn btn-default\" (click)=\"onSwitchMode()\">switch to {{ isloginMode ? 'Sign up' : 'Login'}}</button>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}