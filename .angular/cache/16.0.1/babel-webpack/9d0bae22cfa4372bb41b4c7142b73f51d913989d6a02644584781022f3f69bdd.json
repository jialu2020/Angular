{"ast":null,"code":"import { catchError, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  signup(email, password) {\n    return this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA4hpXtrrJa6GwJQ_c6linszg4kK4FG5T0', {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    }).pipe(catchError(errRes => {\n      let errorMessage = 'An unknow errer occured!';\n      if (!errRes.error || errRes.error.error) {\n        return throwError(() => {\n          new Error(errorMessage);\n        });\n      }\n      switch (errRes.error.error.message) {\n        case 'EMAIL_EXISTS':\n          errorMessage = 'this email exists already!';\n      }\n    }));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["catchError","throwError","AuthService","constructor","http","signup","email","password","post","returnSecureToken","pipe","errRes","errorMessage","error","Error","message","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {catchError, throwError} from \"rxjs\";\r\n\r\n\r\ninterface AuthResponseData{\r\n  kind:string;\r\n  idToken: string;\r\n  email:string;\r\n  refreshToken:string;\r\n  expiresIn: string;\r\n  localId:string;\r\n  //response data format\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor( private http : HttpClient) { }\r\n\r\n\r\n  signup(email:string,password:string){\r\n    return  this.http.post<AuthResponseData>('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA4hpXtrrJa6GwJQ_c6linszg4kK4FG5T0'\r\n    ,{\r\n            email : email,\r\n            password: password ,\r\n            returnSecureToken : true}).pipe(catchError(errRes=>{\r\n                let errorMessage = 'An unknow errer occured!';\r\n                if(!errRes.error||errRes.error.error){\r\n                    return throwError(()=>{\r\n                        new Error(errorMessage);\r\n                    });\r\n                }\r\n\r\n                switch (errRes.error.error.message){\r\n\r\n                     case 'EMAIL_EXISTS':\r\n                        errorMessage =  'this email exists already!';\r\n\r\n                }\r\n\r\n    }));\r\n\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAAQA,UAAU,EAAEC,UAAU,QAAO,MAAM;;;AAa3C,MAGaC,WAAW;EAEtBC,YAAqBC,IAAiB;IAAjB,KAAAA,IAAI,GAAJA,IAAI;EAAiB;EAG1CC,MAAMA,CAACC,KAAY,EAACC,QAAe;IACjC,OAAQ,IAAI,CAACH,IAAI,CAACI,IAAI,CAAmB,uGAAuG,EAC/I;MACOF,KAAK,EAAGA,KAAK;MACbC,QAAQ,EAAEA,QAAQ;MAClBE,iBAAiB,EAAG;KAAK,CAAC,CAACC,IAAI,CAACV,UAAU,CAACW,MAAM,IAAE;MAC/C,IAAIC,YAAY,GAAG,0BAA0B;MAC7C,IAAG,CAACD,MAAM,CAACE,KAAK,IAAEF,MAAM,CAACE,KAAK,CAACA,KAAK,EAAC;QACjC,OAAOZ,UAAU,CAAC,MAAI;UAClB,IAAIa,KAAK,CAACF,YAAY,CAAC;QAC3B,CAAC,CAAC;;MAGN,QAAQD,MAAM,CAACE,KAAK,CAACA,KAAK,CAACE,OAAO;QAE7B,KAAK,cAAc;UAChBH,YAAY,GAAI,4BAA4B;MAAC;IAIjE,CAAC,CAAC,CAAC;EAEL;;AA3BWV,WAAW,C;mBAAXA,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXjB,WAAW,C;SAAXA,WAAW;EAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPpB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}