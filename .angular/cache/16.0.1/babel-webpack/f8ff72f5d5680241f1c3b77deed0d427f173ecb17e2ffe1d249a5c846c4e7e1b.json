{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nlet AuthComponent = class AuthComponent {\n  constructor(a) {\n    this.a = a;\n  }\n  onSwitchMode() {\n    this.isloginMode = !this.isloginMode;\n    console.log(this.isloginMode);\n  }\n  ngOnInit() {\n    this.authForm = new FormGroup({\n      'email': new FormControl('max@test.com', [Validators.required, Validators.email]),\n      'password': new FormControl('', [Validators.required, Validators.minLength(1)])\n    });\n    console.log(this.authForm.value);\n  }\n  onSubmit() {\n    if (this.authForm.valid) {\n      const email = this.authForm.get('email').value;\n      const password = this.authForm.value['password'];\n      //等效\n      console.log(email);\n      console.log(password);\n    } else return;\n  }\n};\nAuthComponent = __decorate([Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})], AuthComponent);\nexport { AuthComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","AuthComponent","constructor","a","onSwitchMode","isloginMode","console","log","ngOnInit","authForm","required","email","minLength","value","onSubmit","valid","get","password","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\jiapl\\Documents\\GitHub\\Angular\\src\\app\\auth\\auth.component.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit{\r\n    authForm : FormGroup;\r\n    isloginMode : boolean;\r\n    constructor(private a) {\r\n    }\r\n\r\n\r\n\r\n\r\n   onSwitchMode(){\r\n     this.isloginMode = !this.isloginMode;\r\n     console.log(this.isloginMode)\r\n   }\r\n\r\n    ngOnInit(): void {\r\n       this.authForm = new FormGroup(\r\n           {\r\n               'email': new FormControl('max@test.com',\r\n                   [Validators.required,Validators.email]),\r\n\r\n               'password' : new FormControl('' ,\r\n                   [Validators.required , Validators.minLength(1) ])\r\n           }\r\n       )\r\n        console.log(this.authForm.value)\r\n    }\r\n\r\n    onSubmit(){\r\n       if(this.authForm.valid){\r\n           const email = this.authForm.get('email').value\r\n           const password = this.authForm.value['password']\r\n           //等效\r\n\r\n\r\n           console.log(email)\r\n           console.log(password)\r\n       }else return;\r\n\r\n\r\n    }\r\n}\r\n"],"mappings":";AAAA,SAAQA,SAAS,QAAe,eAAe;AAC/C,SAAQC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAO,gBAAgB;AAOjE,IAAaC,aAAa,GAA1B,MAAaA,aAAa;EAGtBC,YAAoBC,CAAC;IAAD,KAAAA,CAAC,GAADA,CAAC;EACrB;EAKDC,YAAYA,CAAA;IACV,IAAI,CAACC,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;IACpCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,WAAW,CAAC;EAC/B;EAECG,QAAQA,CAAA;IACL,IAAI,CAACC,QAAQ,GAAG,IAAIV,SAAS,CACzB;MACI,OAAO,EAAE,IAAID,WAAW,CAAC,cAAc,EACnC,CAACE,UAAU,CAACU,QAAQ,EAACV,UAAU,CAACW,KAAK,CAAC,CAAC;MAE3C,UAAU,EAAG,IAAIb,WAAW,CAAC,EAAE,EAC3B,CAACE,UAAU,CAACU,QAAQ,EAAGV,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAE;KACvD,CACJ;IACAN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACE,QAAQ,CAACI,KAAK,CAAC;EACpC;EAEAC,QAAQA,CAAA;IACL,IAAG,IAAI,CAACL,QAAQ,CAACM,KAAK,EAAC;MACnB,MAAMJ,KAAK,GAAG,IAAI,CAACF,QAAQ,CAACO,GAAG,CAAC,OAAO,CAAC,CAACH,KAAK;MAC9C,MAAMI,QAAQ,GAAG,IAAI,CAACR,QAAQ,CAACI,KAAK,CAAC,UAAU,CAAC;MAChD;MAGAP,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MAClBL,OAAO,CAACC,GAAG,CAACU,QAAQ,CAAC;KACxB,MAAK;EAGT;CACH;AAxCYhB,aAAa,GAAAiB,UAAA,EALzBrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWpB,aAAa,CAwCzB;SAxCYA,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}